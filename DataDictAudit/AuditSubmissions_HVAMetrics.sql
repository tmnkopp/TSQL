DECLARE @HVASubmissionDate Date = '2020-07-20' 
DECLARE @PK_ReportingCycle INT = 88

DECLARE @SubmissionDate As Date =  @HVASubmissionDate  
DECLARE @PK_FORM As NVARCHAR(15) = (
	SELECT TOP 1 PK_FORM FROM fsma_OrgSubmissions ORG
	INNER JOIN fsma_ReportingCycle_Components RCC ON RCC.PK_ReportingCycle_Component = ORG.FK_ReportingCycle_Component
	INNER JOIN fsma_ReportingCycles RC ON RC.PK_ReportingCycle = RCC.FK_ReportingCycle 
	WHERE RC.PK_ReportingCycle=@PK_ReportingCycle
)  
IF OBJECT_ID('tempdb..#DICT_FORMMETRICS') IS NOT NULL DROP TABLE #DICT_FORMMETRICS 
SELECT * INTO #DICT_FORMMETRICS FROM (   
	SELECT DISTINCT  Q.PK_Question, identifier_text, Q.QuestionText, ROW_NUMBER() OVER (ORDER BY QG.sortpos, Q.sortpos) SortOrder
	FROM  fsma_QuestionGroups QG
	INNER JOIN fsma_Questions Q ON QG.PK_QuestionGroup=Q.FK_QuestionGroup
	WHERE QG.PK_FORM = @PK_FORM AND identifier_text <> ''
)	DICT_FORMMETRICS 
	CREATE CLUSTERED INDEX IX_DICT_FORMMETRICS_CLUST ON #DICT_FORMMETRICS ( PK_Question ) 
--  SELECT * FROM #DICT_FORMMETRICS ORDER BY SortOrder RETURN; 
 
IF OBJECT_ID('tempdb..#AUDITVIEW') IS NOT NULL DROP TABLE #AUDITVIEW
SELECT * INTO #AUDITVIEW FROM(
	SELECT AuditLog.PK_AuditLog, AuditLog.TABLENAME, CONVERT(NVARCHAR(255), LEFT(AuditLog.FieldName,255)) FieldName, AuditLog.FieldValue, AuditLog.PK_PrimeKey, AuditLog.CHANGE_DATE FROM AuditLog 
	WHERE TABLENAME = 'fsma_Answers' AND EditType <> 'D' 
	AND CHANGE_DATE > DATEADD(MONTH, -24, GETDATE()) AND CHANGE_DATE < DATEADD(DAY, 1, @SubmissionDate)
	AND FieldName IN (SELECT CONVERT(NVARCHAR(15), PK_Question) FROM #DICT_FORMMETRICS )
)	AUDITVIEW 
	CREATE CLUSTERED INDEX IX_AUDITVIEW_CLUST ON #AUDITVIEW ( PK_AuditLog ) 
	CREATE NONCLUSTERED INDEX IX_AUDITVIEW_CHANGE_DATE ON #AUDITVIEW ( CHANGE_DATE ) 
	CREATE NONCLUSTERED INDEX IX_AUDITVIEW_FieldName ON #AUDITVIEW ( FieldName )  
--  SELECT * FROM #AUDITVIEW WHERE PK_PrimeKey=@PK_OrgSubmission RETURN;  

IF OBJECT_ID('tempdb..#AUDITS_DATEFLAT') IS NOT NULL DROP TABLE #AUDITS_DATEFLAT 
SELECT * INTO #AUDITS_DATEFLAT FROM  (  
	SELECT MAX(PK_AuditLog) PK_AuditLog, CONVERTDATE.CHANGE_DATE, PK_OrgSubmission, FieldName 
	FROM ( 
		SELECT CONVERT(NVARCHAR(10), CHANGE_DATE, 121)  CHANGE_DATE,  PK_AuditLog, FieldName, PK_PrimeKey As [PK_OrgSubmission] FROM #AUDITVIEW 
	) CONVERTDATE GROUP BY CHANGE_DATE, PK_OrgSubmission , FieldName  
)	AUDITS_DATEFLAT 
	CREATE CLUSTERED INDEX IX_AUDITS_CLUST ON #AUDITS_DATEFLAT ( PK_AuditLog )      
--  SELECT * FROM #AUDITS_DATEFLAT RETURN;  

IF OBJECT_ID('tempdb..#METRIC_AUDITS') IS NOT NULL DROP TABLE #METRIC_AUDITS
SELECT * INTO #METRIC_AUDITS FROM (
	SELECT ORG.PK_OrgSubmission, #AUDITVIEW.PK_AuditLog, FieldValue, #DICT_FORMMETRICS.PK_Question FieldName, #DICT_FORMMETRICS.identifier_text FieldCaption, #AUDITS_DATEFLAT.CHANGE_DATE 
	FROM #AUDITVIEW
	INNER JOIN fsma_OrgSubmissions ORG ON ORG.PK_OrgSubmission=#AUDITVIEW.PK_PrimeKey 
	INNER JOIN #AUDITS_DATEFLAT ON #AUDITS_DATEFLAT.PK_AuditLog=#AUDITVIEW.PK_AuditLog 
	INNER JOIN #DICT_FORMMETRICS ON #DICT_FORMMETRICS.PK_Question=#AUDITVIEW.FieldName  
	WHERE ORG.PK_FORM = @PK_FORM  
)	METRIC_AUDITS 
	ALTER TABLE #METRIC_AUDITS ADD PK_ID INT IDENTITY(1,1) NOT NULL
	CREATE CLUSTERED INDEX IX_METRIC_AUDITS_CLUS ON #METRIC_AUDITS( PK_ID ) 
	CREATE NONCLUSTERED INDEX IX_METRIC_AUDITS_PK_OrgSubmission ON #METRIC_AUDITS ( PK_OrgSubmission )  
	CREATE NONCLUSTERED INDEX IX_METRIC_AUDITS_FieldName ON #METRIC_AUDITS ( FieldName )  
--	SELECT * FROM #METRIC_AUDITS WHERE PK_OrgSubmission IN (@PK_OrgSubmission) RETURN; 

IF OBJECT_ID('tempdb..#METRIC_SUBMISSIONS') IS NOT NULL DROP TABLE #METRIC_SUBMISSIONS  
SELECT * INTO #METRIC_SUBMISSIONS FROM (
	SELECT #METRIC_AUDITS.PK_OrgSubmission, #METRIC_AUDITS.CHANGE_DATE, #METRIC_AUDITS.FieldValue, #METRIC_AUDITS.FieldName, #METRIC_AUDITS.FieldCaption
	FROM #METRIC_AUDITS 
	INNER JOIN (
			SELECT MAX(CHANGE_DATE) CHANGE_DATE, PK_OrgSubmission, FieldName FROM #METRIC_AUDITS 
			GROUP BY PK_OrgSubmission, FieldName  
	) MAXDATE ON MAXDATE.FieldName=#METRIC_AUDITS.FieldName
		AND MAXDATE.CHANGE_DATE=#METRIC_AUDITS.CHANGE_DATE
		AND MAXDATE.PK_OrgSubmission=#METRIC_AUDITS.PK_OrgSubmission 
) METRIC_SUBMISSIONS
	ALTER TABLE #METRIC_SUBMISSIONS ADD PK_ID INT IDENTITY(1,1) NOT NULL  
	CREATE NONCLUSTERED INDEX IX_METRIC_SUBMISSIONS_PK_OrgSubmission ON #METRIC_SUBMISSIONS ( PK_OrgSubmission )  
--	SELECT * FROM #METRIC_SUBMISSIONS RETURN;

IF OBJECT_ID('tempdb..#HVA_SUBMISSIONS') IS NOT NULL DROP TABLE #HVA_SUBMISSIONS 
SELECT * INTO #HVA_SUBMISSIONS FROM (
	SELECT HVA.SystemName, HVA.PK_HVA, #METRIC_SUBMISSIONS.PK_OrgSubmission, #METRIC_SUBMISSIONS.CHANGE_DATE, #METRIC_SUBMISSIONS.FieldName, #METRIC_SUBMISSIONS.FieldCaption,
	#METRIC_SUBMISSIONS.FieldValue
	FROM #METRIC_SUBMISSIONS
	INNER JOIN fsma_OrgSubHVAMap MAP ON #METRIC_SUBMISSIONS.PK_OrgSubmission=MAP.PK_OrgSubmission
	INNER JOIN fsma_HVAs HVA ON HVA.PK_HVA=MAP.PK_HVA
)HVA_SUBMISSIONS
	CREATE CLUSTERED INDEX IX_HVA_SUBMISSIONS_CLUS ON #HVA_SUBMISSIONS( PK_HVA ) 
	CREATE NONCLUSTERED INDEX IX_HVA_SUBMISSIONS_PK_OrgSubmission ON #HVA_SUBMISSIONS ( PK_OrgSubmission )  
	CREATE NONCLUSTERED INDEX IX_HVA_SUBMISSIONS_PK_HVA ON #HVA_SUBMISSIONS ( PK_HVA )  
 
DECLARE @COLS AS NVARCHAR(MAX)=''; 
DECLARE @exe NVARCHAR(MAX) = ''; 
SET @COLS=''
SET @exe='' 
SELECT @COLS = @COLS + QUOTENAME(identifier_text) + ',' FROM #DICT_FORMMETRICS ORDER BY SortOrder
SELECT @COLS = SUBSTRING(@COLS, 0, LEN(@COLS))  
SET @exe=@exe+'  SELECT * FROM ('
SET @exe=@exe+'	 SELECT SystemName HVA, PK_OrgSubmission, FieldValue, FieldCaption'
SET @exe=@exe+'	 FROM #HVA_SUBMISSIONS' 
SET @exe=@exe+') PV PIVOT  ('
SET @exe=@exe+'	 MAX(FieldValue)  '
SET @exe=@exe+'	 FOR FieldCaption IN ( '+ @COLS +' )'
SET @exe=@exe+') P ORDER BY PK_OrgSubmission DESC' 
EXECUTE sp_executesql @exe
 